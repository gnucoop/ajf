load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("//tools:create-system-config.bzl", "create_system_config")
load("//tools:defaults.bzl", "ng_module")
load("//tools:es5-named-output.bzl", "es5_named_output")
load("//tools/dev-server:index.bzl", "dev_server")

package(default_visibility = ["//visibility:public"])

ng_module(
    name = "dev-app",
    srcs = [
        "dev-app.ts",
        "main.ts",
        "main-module.ts",
    ],
    deps = [
        "//src/dev-app/dev-app",
        "//src/dev-app/example",
        "//src/dev-app/examples-page",
        "//src/dev-app/file-input",
        "//src/dev-app/ion-barcode",
        "//src/dev-app/ion-calendar",
        "//src/dev-app/ion-checkbox-group",
        "//src/dev-app/ion-fields",
        "//src/dev-app/ion-forms",
        "//src/dev-app/ion-image",
        "//src/dev-app/ion-node-icon",
        "//src/dev-app/ion-page-slider",
        "//src/dev-app/ion-reports",
        "//src/dev-app/ion-widgets",
        "//src/dev-app/mat-barcode",
        "//src/dev-app/mat-calendar",
        "//src/dev-app/mat-calendar-ethiopian",
        "//src/dev-app/mat-checkbox-group",
        "//src/dev-app/mat-fields",
        "//src/dev-app/mat-form-builder",
        "//src/dev-app/mat-forms",
        "//src/dev-app/mat-image",
        "//src/dev-app/mat-node-icon",
        "//src/dev-app/mat-page-slider",
        "//src/dev-app/mat-report-builder",
        "//src/dev-app/mat-reports",
        "//src/dev-app/mat-time",
        "//src/dev-app/mat-widgets",
        "@npm//@angular/router",
        "@npm//@gic/angular",
        "@npm//@ionic/angular",
    ],
)

create_system_config(
    name = "system-config",
    output_name = "system-config.js",
)

# File group for all static files which are needed to serve the dev-app. These files are
# used in the devserver as runfiles and will be copied into the static web package that can
# be deployed on static hosting services (like firebase).
filegroup(
    name = "dev_app_static_files",
    srcs = [
        "favicon.ico",
        "index.html",
        ":system-config",
        "//tools:system-rxjs-operators.js",
        "//tools/third-party-libs:chart.js-bundle.js",
        "//tools/third-party-libs:css-element-queries-bundle.js",
        "//tools/third-party-libs:date-fns-bundle.js",
        "//tools/third-party-libs:esprima-bundle.js",
        "//tools/third-party-libs:gic-core-bundle.js",
        "//tools/third-party-libs:gic-core-loader-bundle.js",
        "//tools/third-party-libs:ionic-core-bundle.js",
        "//tools/third-party-libs:ionic-core-loader-bundle.js",
        "//tools/third-party-libs:leaflet-bundle.js",
        "//tools/third-party-libs:file-saver-bundle.js",
        "//tools/third-party-libs:numbro-bundle.js",
        "//tools/third-party-libs:quill-bundle.js",
        "//tools/third-party-libs:zxing-library-bundle.js",
        "//tools/third-party-libs:xlsx-bundle.js",
        "@npm//:node_modules/@ajf/icons/css/ajf-icons.css",
        "@npm//:node_modules/@ajf/icons/fonts/ajf.eot",
        "@npm//:node_modules/@ajf/icons/fonts/ajf.svg",
        "@npm//:node_modules/@ajf/icons/fonts/ajf.ttf",
        "@npm//:node_modules/@ajf/icons/fonts/ajf.woff",
        "@npm//:node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
        "@npm//:node_modules/@ionic/angular/css/ionic.bundle.css",
        "@npm//:node_modules/@webcomponents/custom-elements/custom-elements.min.js",
        "@npm//:node_modules/core-js/client/core.js",
        "@npm//:node_modules/flag-icon-css/css/flag-icon.min.css",
        "@npm//:node_modules/flag-icon-css/flags/4x3/bf.svg",
        "@npm//:node_modules/leaflet/dist/leaflet.css",
        "@npm//:node_modules/rxjs/bundles/rxjs.umd.min.js",
        "@npm//:node_modules/systemjs/dist/system.js",
        "@npm//:node_modules/tslib/tslib.js",
        "@npm//:node_modules/zone.js/dist/zone.js",
    ],
)

dev_server(
    name = "devserver",
    srcs = [":dev_app_static_files"],
    additional_root_paths = [
        "npm/node_modules",
        # Needed for compatibility with "pkg_web" which always uses the tree
        # artifact output as workspace root.
        "gc_ajf",
    ],
    tags = ["manual"],
    deps = [
        ":dev-app",
    ],
)

# Collects all ES5 JavaScript files which are required to serve the dev-app. By default,
# ts_library and ng_module targets only expose the type definitmat files as outputs.
es5_named_output(
    name = "dev_app_js_sources",
    tags = ["manual"],
    deps = [":dev-app"],
)

# Target that builds a static web package of the dev-app. The web package can be
# deployed on static hosting services (such as firebase).
pkg_web(
    name = "web_package",
    srcs = [
        ":dev_app_js_sources",
        ":dev_app_static_files",
    ],
    additional_root_paths = [
        "npm/node_modules",
    ],
    tags = ["manual"],
)
