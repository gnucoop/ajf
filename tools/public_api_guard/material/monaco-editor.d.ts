export declare class AjfMonacoEditor implements OnDestroy, AfterViewInit, OnChanges {
    acceptSuggestionOnEnter?: boolean;
    ariaLabel?: string;
    autoClosingBrackets?: boolean;
    autoFormatOnLoad: boolean;
    automaticLayout?: boolean;
    codeLens?: boolean;
    contextmenu?: boolean;
    cursorBlinking?: string;
    cursorStyle?: string;
    disableAutocomplete: boolean;
    disableTranslate3d?: boolean;
    get editor(): any;
    editorContent: ElementRef;
    experimentalScreenReader?: boolean;
    folding?: boolean;
    fontFamily?: string;
    fontLigatures?: boolean;
    fontSize?: number;
    fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';
    formatOnType?: boolean;
    glyphMargin?: boolean;
    hideCursorInOverviewRuler?: boolean;
    hover?: boolean;
    iconsInSuggestions?: boolean;
    init: EventEmitter<any>;
    language: IEditorLanguage;
    lineDecorationsWidth?: number;
    lineHeight?: number;
    lineNumbers?: boolean;
    lineNumbersMinChars?: number;
    monacoLibPath: string;
    mouseWheelScrollSensitivity?: number;
    mouseWheelZoom?: boolean;
    overviewRulerLanes?: number;
    parameterHints?: boolean;
    quickSuggestions?: boolean;
    quickSuggestionsDelay?: number;
    readOnly?: boolean;
    renderControlCharacters?: boolean;
    renderIndentGuides?: boolean;
    renderLineHighlight?: boolean;
    renderWhitespace?: 'none' | 'boundary' | 'all';
    revealHorizontalRightPadding?: number;
    roundedSelection?: boolean;
    rulers?: number[];
    scrollBeyondLastLine?: boolean;
    scrollbar?: IEditorScrollbarOptions;
    selectOnLineNumbers?: boolean;
    selectionClipboard?: boolean;
    selectionHighlight?: boolean;
    snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';
    stopRenderingLineAfter?: number;
    suggestOnTriggerCharacters?: boolean;
    tabCompletion?: boolean;
    theme?: IEditorTheme;
    useTabStops?: boolean;
    set value(v: string);
    valueChange: EventEmitter<any>;
    set valueToCompare(v: string);
    valueToCompareChange: EventEmitter<any>;
    wordBasedSuggestions?: boolean;
    wordSeparators?: string;
    wordWrap?: boolean;
    wordWrapBreakAfterCharacters?: string;
    wordWrapBreakBeforeCharacters?: string;
    wordWrapBreakObtrusiveCharacters?: string;
    wrappingColumn?: number;
    wrappingIndent?: string;
    constructor();
    dispose(): void;
    ngAfterViewInit(): void;
    ngOnChanges(_changes: {
        [propKey: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    onResize(_event: any): void;
    static ɵcmp: i0.ɵɵComponentDeclaration<AjfMonacoEditor, "ajf-monaco-editor", never, { "experimentalScreenReader": "experimentalScreenReader"; "ariaLabel": "ariaLabel"; "rulers": "rulers"; "wordSeparators": "wordSeparators"; "selectionClipboard": "selectionClipboard"; "lineNumbers": "lineNumbers"; "selectOnLineNumbers": "selectOnLineNumbers"; "lineNumbersMinChars": "lineNumbersMinChars"; "glyphMargin": "glyphMargin"; "lineDecorationsWidth": "lineDecorationsWidth"; "revealHorizontalRightPadding": "revealHorizontalRightPadding"; "roundedSelection": "roundedSelection"; "theme": "theme"; "readOnly": "readOnly"; "scrollbar": "scrollbar"; "overviewRulerLanes": "overviewRulerLanes"; "cursorBlinking": "cursorBlinking"; "mouseWheelZoom": "mouseWheelZoom"; "cursorStyle": "cursorStyle"; "fontLigatures": "fontLigatures"; "disableTranslate3d": "disableTranslate3d"; "hideCursorInOverviewRuler": "hideCursorInOverviewRuler"; "scrollBeyondLastLine": "scrollBeyondLastLine"; "automaticLayout": "automaticLayout"; "wrappingColumn": "wrappingColumn"; "wordWrap": "wordWrap"; "wrappingIndent": "wrappingIndent"; "wordWrapBreakBeforeCharacters": "wordWrapBreakBeforeCharacters"; "wordWrapBreakAfterCharacters": "wordWrapBreakAfterCharacters"; "wordWrapBreakObtrusiveCharacters": "wordWrapBreakObtrusiveCharacters"; "stopRenderingLineAfter": "stopRenderingLineAfter"; "hover": "hover"; "contextmenu": "contextmenu"; "mouseWheelScrollSensitivity": "mouseWheelScrollSensitivity"; "quickSuggestions": "quickSuggestions"; "quickSuggestionsDelay": "quickSuggestionsDelay"; "parameterHints": "parameterHints"; "iconsInSuggestions": "iconsInSuggestions"; "autoClosingBrackets": "autoClosingBrackets"; "formatOnType": "formatOnType"; "suggestOnTriggerCharacters": "suggestOnTriggerCharacters"; "acceptSuggestionOnEnter": "acceptSuggestionOnEnter"; "snippetSuggestions": "snippetSuggestions"; "tabCompletion": "tabCompletion"; "wordBasedSuggestions": "wordBasedSuggestions"; "selectionHighlight": "selectionHighlight"; "codeLens": "codeLens"; "folding": "folding"; "renderWhitespace": "renderWhitespace"; "renderControlCharacters": "renderControlCharacters"; "renderIndentGuides": "renderIndentGuides"; "renderLineHighlight": "renderLineHighlight"; "useTabStops": "useTabStops"; "fontFamily": "fontFamily"; "fontWeight": "fontWeight"; "fontSize": "fontSize"; "lineHeight": "lineHeight"; "language": "language"; "disableAutocomplete": "disableAutocomplete"; "autoFormatOnLoad": "autoFormatOnLoad"; "monacoLibPath": "monacoLibPath"; "valueToCompare": "valueToCompare"; "value": "value"; }, { "valueChange": "valueChange"; "valueToCompareChange": "valueToCompareChange"; "init": "init"; }, never, never>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AjfMonacoEditor, never>;
}

export declare class AjfMonacoEditorModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<AjfMonacoEditorModule, never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<AjfMonacoEditorModule>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<AjfMonacoEditorModule, [typeof i1.AjfMonacoEditor], never, [typeof i1.AjfMonacoEditor]>;
}
